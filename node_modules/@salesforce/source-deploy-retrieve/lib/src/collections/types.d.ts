import { OptionalTreeRegistryOptions } from '../common';
import { ComponentSet } from './componentSet';
export interface PackageTypeMembers {
    name: string;
    members: string[];
}
export interface PackageManifestObject {
    Package: {
        types: PackageTypeMembers[];
        version: string;
    };
}
export interface FromSourceOptions extends OptionalTreeRegistryOptions {
    /**
     * File or directory paths to resolve components against
     */
    fsPaths: string[];
    /**
     * Only resolve components contained in the given set
     */
    inclusiveFilter?: ComponentSet;
}
export interface FromManifestOptions extends OptionalTreeRegistryOptions {
    resolve?: Iterable<string>;
    literalWildcard?: boolean;
}
